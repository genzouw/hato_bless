<html xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:MSHelp="http://msdn.microsoft.com/mshelp" xmlns:mshelp="http://msdn.microsoft.com/mshelp" xmlns:ddue="http://ddue.schemas.microsoft.com/authoring/2003/5" xmlns:msxsl="urn:schemas-microsoft-com:xslt"><head><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=UTF-8" /><META NAME="save" CONTENT="history" /><title>データ型の違いについて</title><meta name="Language" content="ja-jp" /><meta name="System.Keywords" content="データ型の違い" /><meta name="Microsoft.Help.Id" content="ab8fa00f-cb16-47e2-94b8-3a76f56c2b84" /><meta name="Description" content="Java プログラミング言語のデータ型と SQL Server のデータ型には、異なる点が多数あります。Microsoft JDBC Driver for SQL Server では、さまざまな型の変換を行うことによって、これらの違いに対応しています。" /><meta name="Microsoft.Help.ContentType" content="Concepts" /><link rel="stylesheet" type="text/css" href="../local/Classic.css" /><script type="text/javascript" src="../scripts/EventUtilities.js">&amp;nbsp;</script><script type="text/javascript" src="../scripts/SplitScreen.js">&amp;nbsp;</script><script type="text/javascript" src="../scripts/Dropdown.js">&amp;nbsp;</script><script type="text/javascript" src="../scripts/script_manifold.js">&amp;nbsp;</script><script type="text/javascript" src="../scripts/script_feedBack.js">&amp;nbsp;</script><script type="text/javascript" src="../scripts/CheckboxMenu.js">&amp;nbsp;</script><script type="text/javascript" src="../scripts/CommonUtilities.js">&amp;nbsp;</script><script type="text/javascript" src="../local/script_main.js">&amp;nbsp;</script></head><body><div id="header"><table id="bottomTable" cellpadding="0" cellspacing="0"><tr><td align="left"><span id="headerBold">データ型の違いについて</span></td></tr></table><table id="gradientTable"><tr><td class="nsrBottom" background="../icons/gradient.gif" /></tr></table></div><div id="mainSection"><div id="mainBody"><div class="introduction"><p>Java プログラミング言語のデータ型と SQL Server のデータ型には、異なる点が多数あります。Microsoft JDBC Driver for SQL Server では、さまざまな型の変換を行うことによって、これらの違いに対応しています。</p></div><h1 class="heading">文字型</h1><div id="sectionSection0" class="section" name="collapseableSection" style=""><p>JDBC の文字列データ型は、<span sdata="langKeyword" value="CHAR"><span class="keyword">CHAR</span></span>、<span sdata="langKeyword" value="VARCHAR"><span class="keyword">VARCHAR</span></span>、および <span sdata="langKeyword" value="LONGVARCHAR"><span class="keyword">LONGVARCHAR</span></span> です。JDBC ドライバーでは、JDBC 4.0 API がサポートされます。JDBC 4.0 では、JDBC の文字列データ型として、<span sdata="langKeyword" value="NCHAR"><span class="keyword">NCHAR</span></span>、<span sdata="langKeyword" value="NVARCHAR"><span class="keyword">NVARCHAR</span></span>、および <span sdata="langKeyword" value="LONGNVARCHAR"><span class="keyword">LONGNVARCHAR</span></span> も使用できます。これらの新しい文字列型では Java のネイティブの文字型が Unicode 形式で維持されるため、ANSI から Unicode への変換または Unicode から ANSI への変換を実行する必要がありません。</p><div class="tableSection"><table width="50%" cellspacing="2" cellpadding="5" frame="lhs"><tr><th><p>種類</p></th><th><p>説明</p></th></tr><tr><td><p>固定長</p></td><td><p>SQL Server の <span sdata="langKeyword" value="char"><span class="keyword">char</span></span> データ型および <span sdata="langKeyword" value="nchar"><span class="keyword">nchar</span></span> データ型は、JDBC の <span sdata="langKeyword" value="CHAR"><span class="keyword">CHAR</span></span> 型および <span sdata="langKeyword" value="NCHAR"><span class="keyword">NCHAR</span></span> 型に直接マップされます。列が SET ANSI_PADDING ON の場合、これらはサーバーが埋め込みを行う固定長の型です。埋め込みは <span sdata="langKeyword" value="nchar"><span class="keyword">nchar</span></span> に対しては常にオンですが、<span sdata="langKeyword" value="char"><span class="keyword">char</span></span> に対しては、サーバーにより char 列の埋め込みが行われていない場合は、JDBC ドライバーが埋め込みを行います。</p></td></tr><tr><td><p>可変長</p></td><td><p>SQL Server の <span sdata="langKeyword" value="varchar"><span class="keyword">varchar</span></span> 型および <span sdata="langKeyword" value="nvarchar"><span class="keyword">nvarchar</span></span> 型は、JDBC の <span sdata="langKeyword" value="VARCHAR"><span class="keyword">VARCHAR</span></span> 型および <span sdata="langKeyword" value="NVARCHAR"><span class="keyword">NVARCHAR</span></span> 型に直接マップされます。</p></td></tr><tr><td><p>長いデータ型</p></td><td><p>SQL Server の <span sdata="langKeyword" value="text"><span class="keyword">text</span></span> 型および <span sdata="langKeyword" value="ntext"><span class="keyword">ntext</span></span> 型は、それぞれ、JDBC の <span sdata="langKeyword" value="LONGVARCHAR"><span class="keyword">LONGVARCHAR</span></span> 型および <span sdata="langKeyword" value="LONGNVARCHAR"><span class="keyword">LONGNVARCHAR</span></span> 型にマップされます。これらの型は SQL Server 2005 以降では推奨されていないため、代わりに大きな値の型である <span sdata="langKeyword" value="varchar(max)"><span class="keyword">varchar(max)</span></span> または <span sdata="langKeyword" value="nvarchar(max)"><span class="keyword">nvarchar(max)</span></span> を使用する必要があります。</p><p>サーバーの <span sdata="langKeyword" value="text"><span class="keyword">text</span></span> 列と <span sdata="langKeyword" value="ntext"><span class="keyword">ntext</span></span> 列に対して <b>update&lt;Numeric Type&gt;</b> メソッドと <a href="4993dfe1-2232-4b3c-b931-dfdb35dd225a.htm">updateObject (int, java.lang.Object)</a> メソッドを使用すると、エラーになります。ただし、サーバーの <span sdata="langKeyword" value="text"><span class="keyword">text</span></span> 列と <span sdata="langKeyword" value="ntext"><span class="keyword">ntext</span></span> 列に対して、文字変換の型を指定して <a href="93a2b22c-82b4-48c7-a428-369ebe98a372.htm">setObject</a> メソッドを使用することは可能です。</p></td></tr></table></div></div><h1 class="heading">バイナリ文字列型</h1><div id="sectionSection1" class="section" name="collapseableSection" style=""><p>JDBC のバイナリ文字列型は、<span sdata="langKeyword" value="BINARY"><span class="keyword">BINARY</span></span>、<span sdata="langKeyword" value="VARBINARY"><span class="keyword">VARBINARY</span></span>、および <span sdata="langKeyword" value="LONGVARBINARY"><span class="keyword">LONGVARBINARY</span></span> です。</p><div class="tableSection"><table width="50%" cellspacing="2" cellpadding="5" frame="lhs"><tr><th><p>種類</p></th><th><p>説明</p></th></tr><tr><td><p>固定長</p></td><td><p>SQL Server の <span sdata="langKeyword" value="binary"><span class="keyword">binary</span></span> 型は JDBC の <span sdata="langKeyword" value="BINARY"><span class="keyword">BINARY</span></span> 型に直接マップされます。列が SET ANSI_PADDING ON の場合、これはサーバーが埋め込みを行う固定長の型です。サーバーの char 列に埋め込みが行われていない場合は、JDBC ドライバーが埋め込みを行います。</p><p>SQL Server の <span sdata="langKeyword" value="timestamp"><span class="keyword">timestamp</span></span> 型は、固定長 8 バイトの JDBC の <span sdata="langKeyword" value="BINARY"><span class="keyword">BINARY</span></span> 型です。</p></td></tr><tr><td><p>可変長</p></td><td><p>SQL Server の <span sdata="langKeyword" value="varbinary"><span class="keyword">varbinary</span></span> 型は JDBC の <span sdata="langKeyword" value="VARBINARY"><span class="keyword">VARBINARY</span></span> 型にマップされます。</p><p>SQL Server の <span sdata="langKeyword" value="udt"><span class="keyword">udt</span></span> 型は、<span sdata="langKeyword" value="VARBINARY"><span class="keyword">VARBINARY</span></span> 型として JDBC にマップされます。</p></td></tr><tr><td><p>長いデータ型</p></td><td><p>SQL Server の <span sdata="langKeyword" value="image"><span class="keyword">image</span></span> 型は JDBC の <span sdata="langKeyword" value="LONGVARBINARY"><span class="keyword">LONGVARBINARY</span></span> 型にマップされます。この型は SQL Server 2005 以降では推奨されていないため、代わりに大きな値の型である <span sdata="langKeyword" value="varbinary(max)"><span class="keyword">varbinary(max)</span></span> を使用する必要があります。</p></td></tr></table></div></div><h1 class="heading">真数型</h1><div id="sectionSection2" class="section" name="collapseableSection" style=""><p>JDBC の真数型は、対応する SQL Server 型に直接マップされます。</p><div class="tableSection"><table width="50%" cellspacing="2" cellpadding="5" frame="lhs"><tr><th><p>種類</p></th><th><p>説明</p></th></tr><tr><td><p>BIT</p></td><td><p>JDBC の <span sdata="langKeyword" value="BIT"><span class="keyword">BIT</span></span> 型は、0 または 1 の単一ビットを表します。この型は、SQL Server の <span sdata="langKeyword" value="bit"><span class="keyword">bit</span></span> 型にマップされます。</p></td></tr><tr><td><p>TINYINT</p></td><td><p>JDBC の <span sdata="langKeyword" value="TINYINT"><span class="keyword">TINYINT</span></span> 型は、1 バイトを表します。この型は、SQL Server の <span sdata="langKeyword" value="tinyint"><span class="keyword">tinyint</span></span> 型にマップされます。</p></td></tr><tr><td><p>SMALLINT</p></td><td><p>JDBC の <span sdata="langKeyword" value="SMALLINT"><span class="keyword">SMALLINT</span></span> 型は、符号付きの 16 ビット整数を表します。この型は、SQL Server の <span sdata="langKeyword" value="smallint"><span class="keyword">smallint</span></span> 型にマップされます。</p></td></tr><tr><td><p>INTEGER</p></td><td><p>JDBC の <span sdata="langKeyword" value="INTEGER"><span class="keyword">INTEGER</span></span> 型は、符号付きの 32 ビット整数を表します。この型は、SQL Server の <span sdata="langKeyword" value="int"><span class="keyword">int</span></span> 型にマップされます。</p></td></tr><tr><td><p>BIGINT</p></td><td><p>JDBC の <span sdata="langKeyword" value="BIGINT"><span class="keyword">BIGINT</span></span> 型は、符号付きの 64 ビット整数を表します。この型は、SQL Server の <span sdata="langKeyword" value="bigint"><span class="keyword">bigint</span></span> 型にマップされます。</p></td></tr><tr><td><p>NUMERIC</p></td><td><p>JDBC の <span sdata="langKeyword" value="NUMERIC"><span class="keyword">NUMERIC</span></span> 型は、同一有効桁数の値を保持する固定長の有効桁数の 10 進値を表します。<span sdata="langKeyword" value="NUMERIC"><span class="keyword">NUMERIC</span></span> 型は、SQL Server の <span sdata="langKeyword" value="numeric"><span class="keyword">numeric</span></span> 型にマップされます。</p></td></tr><tr><td><p>DECIMAL</p></td><td><p>JDBC の <span sdata="langKeyword" value="DECIMAL"><span class="keyword">DECIMAL</span></span> 型は、指定された有効桁数以上の値を保持する固定長の有効桁数の 10 進値を表します。<span sdata="langKeyword" value="DECIMAL"><span class="keyword">DECIMAL</span></span> 型は、SQL Server の <span sdata="langKeyword" value="decimal"><span class="keyword">decimal</span></span> 型にマップされます。</p><p>JDBC の <span sdata="langKeyword" value="DECIMAL"><span class="keyword">DECIMAL</span></span> 型は、SQL Server の <span sdata="langKeyword" value="money"><span class="keyword">money</span></span> 型と <span sdata="langKeyword" value="smallmoney"><span class="keyword">smallmoney</span></span> 型にもマップされます。これらはそれぞれ、8 バイトと 4 バイトで格納される固定長の有効桁数の decimal 型です。</p></td></tr></table></div></div><h1 class="heading">概数型</h1><div id="sectionSection3" class="section" name="collapseableSection" style=""><p>JDBC の概数型は、<span sdata="langKeyword" value="REAL"><span class="keyword">REAL</span></span>、<span sdata="langKeyword" value="DOUBLE"><span class="keyword">DOUBLE</span></span>、および <span sdata="langKeyword" value="FLOAT"><span class="keyword">FLOAT</span></span> です。</p><div class="tableSection"><table width="50%" cellspacing="2" cellpadding="5" frame="lhs"><tr><th><p>種類</p></th><th><p>説明</p></th></tr><tr><td><p>REAL</p></td><td><p>JDBC の <span sdata="langKeyword" value="REAL"><span class="keyword">REAL</span></span> 型の有効桁数は 7 桁 (単精度) で、SQL Server の <span sdata="langKeyword" value="real"><span class="keyword">real</span></span> 型に直接マップされます。</p></td></tr><tr><td><p>DOUBLE</p></td><td><p>JDBC の <span sdata="langKeyword" value="DOUBLE"><span class="keyword">DOUBLE</span></span> 型の有効桁数は 15 桁 (倍精度) で、SQL Server の <span sdata="langKeyword" value="float"><span class="keyword">float</span></span> 型にマップされます。JDBC の <span sdata="langKeyword" value="FLOAT"><span class="keyword">FLOAT</span></span> 型は <span sdata="langKeyword" value="DOUBLE"><span class="keyword">DOUBLE</span></span> と同義です。<span sdata="langKeyword" value="FLOAT"><span class="keyword">FLOAT</span></span> と <span sdata="langKeyword" value="DOUBLE"><span class="keyword">DOUBLE</span></span> は間違いやすいため、<span sdata="langKeyword" value="DOUBLE"><span class="keyword">DOUBLE</span></span> の使用をお勧めします。</p></td></tr></table></div></div><h1 class="heading">Datetime 型</h1><div id="sectionSection4" class="section" name="collapseableSection" style=""><p>JDBC の <span sdata="langKeyword" value="TIMESTAMP"><span class="keyword">TIMESTAMP</span></span> 型は、SQL Server の <span sdata="langKeyword" value="datetime"><span class="keyword">datetime</span></span> 型および <span sdata="langKeyword" value="smalldatetime"><span class="keyword">smalldatetime</span></span> 型にマップされます。<span sdata="langKeyword" value="datetime"><span class="keyword">datetime</span></span> 型は、2 つの 4 バイト整数に格納されます。<span sdata="langKeyword" value="smalldatetime"><span class="keyword">smalldatetime</span></span> 型は同じ情報 (日付と時刻) を保持しますが、精度が低く、2 つの 2 バイトの smallint に格納されます。</p><div style="margin: .5em 1.5em .5em 1.5em"><b></b><p>SQL Server の <span sdata="langKeyword" value="timestamp"><span class="keyword">timestamp</span></span> 型は、固定長のバイナリ文字列型です。これは、JDBC の時刻型 (<span sdata="langKeyword" value="DATE"><span class="keyword">DATE</span></span>、<span sdata="langKeyword" value="TIME"><span class="keyword">TIME</span></span>、または <span sdata="langKeyword" value="TIMESTAMP"><span class="keyword">TIMESTAMP</span></span>) のいずれにもマップされません。</p></div></div><h1 class="heading">カスタム型のマッピング</h1><div id="sectionSection5" class="section" name="collapseableSection" style=""><p>JDBC の高度な型 (UDT、Struct など) に対応した <b>SQLData</b> インターフェイスを使用するカスタム型のマッピング機能は、JDBC ドライバーに実装されていません。</p></div><span id="seeAlsoSpan"><h1 class="heading">関連項目</h1></span><div id="seeAlsoSection" class="section" name="collapseableSection" style=""><div class="seeAlsoStyle"><span sdata="link"><a href="7802328d-4d23-4775-9573-4169b127d258.htm">JDBC ドライバーのデータ型について</a></span></div></div></div><div id="footer" class="section"><span id="feedbackarea">このトピックに関する<a href="javascript:SubmitFeedback('DevDocs@Microsoft.com','','','','8.0.12060.10000','%0\dフィードバックありがとうございます。開発チームは、皆様からのフィードバックに基づいてドキュメントを改善しています。フィードバックを確認中、内容の確認または解決策に関するご意見をうかがうために電子メールをお送りする場合があります。お客様の電子メール アドレスをそれ以外の目的で使用することはありません。また、確認完了後はお客様の電子メール アドレス情報を削除させていただきます。%0\Aマイクロソフトのプライバシーに関する声明の詳細については、http://privacy.microsoft.com/ja-jp/default.aspx を参照してください。%0\A%0\d','カスタマー フィードバック');">フィードバック</a>を Microsoft にお送りください。</span><span id="copyrightarea"><p><a href="9bad553b-9e70-4696-8499-2e35f772a1e0.htm">© 2012 Microsoft.All rights reserved.</a></p></span></div></div></body></html>