USE [HATO2]
GO

/****** Object:  StoredProcedure [dbo].[MAKE_IRAIMOTO_RYOKINDATA_ETC]    Script Date: 07/31/2014 11:35:38 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[MAKE_IRAIMOTO_RYOKINDATA_ETC](@UKETSUKE_NO CHAR(8),@SOSHIKI_CD CHAR(5)) AS
BEGIN
	DECLARE
		@IRAIMOTO_SOSHIKI_CD		CHAR(5),
		@RYOKIN_MODE				CHAR(1),
		@DATA_COUNT					INT,
		@ERR						INT,
		@LOG_MSG					VARCHAR(200)
	SELECT @ERR = 0
	--依頼元組織ＣＤ、料金モードを取得する
	SELECT	@IRAIMOTO_SOSHIKI_CD = IRAIMOTO_SOSHIKI_CD,
				@RYOKIN_MODE = RYOKIN_MODE
		FROM T_JUCHU_SYOSAI
		WHERE UKETSUKE_NO = @UKETSUKE_NO
		AND   SOSHIKI_CD  = @SOSHIKI_CD
	IF @@ROWCOUNT = 0
	BEGIN
		SELECT @ERR = -99
		GOTO MAKE_IRAIMOTO_RYOKINDATA_ETC_ERR
	END
	--依頼元組織コードが登録されていない場合は処理を抜ける
	IF @IRAIMOTO_SOSHIKI_CD IS NULL
	BEGIN
		SELECT @ERR = -1
		GOTO MAKE_IRAIMOTO_RYOKINDATA_ETC_EXIT
	END
--    SET @LOG_MSG = '依頼元組織ＣＤ='+@IRAIMOTO_SOSHIKI_CD+'、料金モード'+@RYOKIN_MODE+'を取得'
--    EXEC WRITE_PRCLOG 'RYOKINDATASP1',@UKETSUKE_NO,@SOSHIKI_CD,'D',@LOG_MSG
	--依頼元組織の料金データ存在をチェックする
	SELECT @DATA_COUNT = COUNT(*)
		FROM T_JUCHU_RYOKIN
		WHERE UKETSUKE_NO = @UKETSUKE_NO
		AND   SOSHIKI_CD  = @IRAIMOTO_SOSHIKI_CD
		AND   DELETE_FLG  = '0'
	--存在した場合は処理終了
	IF @DATA_COUNT != 0
	BEGIN
		SELECT @ERR = -1
		GOTO MAKE_IRAIMOTO_RYOKINDATA_ETC_EXIT
	END
--    SET @LOG_MSG = '依頼元組織の料金データ存在をチェック='+CONVERT(VARCHAR,@DATA_COUNT)
--    EXEC WRITE_PRCLOG 'RYOKINDATASP1',@UKETSUKE_NO,@IRAIMOTO_SOSHIKI_CD,'D',@LOG_MSG
	DELETE FROM T_JUCHU_RYOKIN_M
		WHERE UKETSUKE_NO = @UKETSUKE_NO
		AND   SOSHIKI_CD  = @IRAIMOTO_SOSHIKI_CD
	SELECT @ERR = @@ERROR
	IF @ERR != 0
	BEGIN
		GOTO MAKE_IRAIMOTO_RYOKINDATA_ETC_ERR
	END
	--存在しない場合は料金情報、料金明細を作成する。
	--また、料金モードも同じに更新する。
	--料金明細の作成
	INSERT INTO T_JUCHU_RYOKIN_M (
			UKETSUKE_NO,
			SOSHIKI_CD,
			RYOKIN_SHUBETSU_CD,
			RYOKIN_SEQ,
			RYOKIN_KBN,
			SHOHIN_CD,
			RYOKIN_KOMOKU_MEI,
			RYOKIN_SU_1,
			RYOKIN_SU_2,
			BOX_SU,					--2004.07.07 Add By Kos
			RYOKIN_TANKA,
			URIAGE_GK,
			HAITATSU_FLG,
			KOJINFUTAN_GK,
			UPDATE_DT,
			UPDATE_TNT_ID,
			GAMEN_ID,
			DELETE_FLG
			)
	SELECT	UKETSUKE_NO,
			@IRAIMOTO_SOSHIKI_CD,
			RYOKIN_SHUBETSU_CD,
			RYOKIN_SEQ,
			RYOKIN_KBN,
			SHOHIN_CD,
			RYOKIN_KOMOKU_MEI,
			RYOKIN_SU_1,
			RYOKIN_SU_2,
			BOX_SU,					--2004.07.07 Add By Kos
			RYOKIN_TANKA,
			URIAGE_GK,
			HAITATSU_FLG,
			KOJINFUTAN_GK,
			UPDATE_DT,
			UPDATE_TNT_ID,
			GAMEN_ID,
			DELETE_FLG
	FROM	T_JUCHU_RYOKIN_M
	WHERE UKETSUKE_NO = @UKETSUKE_NO
	AND   SOSHIKI_CD  = @SOSHIKI_CD
	SELECT @ERR = @@ERROR
	IF @ERR != 0
	BEGIN
		GOTO MAKE_IRAIMOTO_RYOKINDATA_ETC_ERR
	END
--    SET @LOG_MSG = '依頼元組織の料金明細データ作成='+CONVERT(VARCHAR,@ERR)
--    EXEC WRITE_PRCLOG 'RYOKINDATASP1',@UKETSUKE_NO,@IRAIMOTO_SOSHIKI_CD,'D',@LOG_MSG
	DELETE FROM T_JUCHU_RYOKIN
		WHERE UKETSUKE_NO = @UKETSUKE_NO
		AND   SOSHIKI_CD  = @IRAIMOTO_SOSHIKI_CD
	SELECT @ERR = @@ERROR
	IF @ERR != 0
	BEGIN
		GOTO MAKE_IRAIMOTO_RYOKINDATA_ETC_ERR
	END
	--料金情報の作成
	INSERT INTO T_JUCHU_RYOKIN (
			UKETSUKE_NO,
			SOSHIKI_CD,
			--RYOKIN_COURSE_KBN,   --2004.07.06 受注基本に項目移動
			RYOKIN_1,
			RYOKIN_2,
			RYOKIN_3,
			RYOKIN_4,
			RYOKIN_5,
			RYOKIN_6,
			RYOKIN_SHOKEI,
			RYOKIN_NEBIKI_GK,
			--RYOKIN_TESURYO_GK,    --2004.07.25 Del By Kos 内手数料は引継ぎを行わない
			RYOKIN_KEI,
			SHOHIZEI_RT,
			SHOHIZEI_GK,
			KOJINFUTAN_GK,
			SEIKYU_KEI,
			ARARI_GK,
			RYOKIN_NEBIKI_GK1,		--2004.07.13 Add By Kos
			RYOKIN_NEBIKI_GKN,		--2004.07.24 Add By Kos
			RYOKIN_NEBIKI_GKS,		--2004.07.24 Add By Kos
			SYARYO_KBN_1,
			SYARYO_SU_1,
			SYARYO_TANKA_1,
			SYARYO_KBN_2,
			SYARYO_SU_2,
			SYARYO_TANKA_2,
			TSUMI_SAGYOIN_SU,
			TSUMI_SAGYOIN_TANKA,
			OROSHI_SAGYOIN_SU,
			OROSHI_SAGYOIN_TANKA,
			OPTION_MEI,
			SHOHIZEI_KBN,			--2004.07.21 Add By Kos
			UPDATE_DT,
			UPDATE_TNT_ID,
			GAMEN_ID,
			DELETE_FLG
			)
	SELECT	UKETSUKE_NO,
			@IRAIMOTO_SOSHIKI_CD,
			--RYOKIN_COURSE_KBN,   --2004.07.06 受注基本に項目移動
			RYOKIN_1,
			RYOKIN_2,
			RYOKIN_3,
			RYOKIN_4,
			RYOKIN_5,
			RYOKIN_6,
			RYOKIN_SHOKEI,
			RYOKIN_NEBIKI_GK,
			--RYOKIN_TESURYO_GK,
			RYOKIN_KEI,
			SHOHIZEI_RT,
			SHOHIZEI_GK,
			KOJINFUTAN_GK,
			SEIKYU_KEI,
			ARARI_GK,
			RYOKIN_NEBIKI_GK1,		--2004.07.13 Add By Kos
			RYOKIN_NEBIKI_GKN,		--2004.07.24 Add By Kos
			RYOKIN_NEBIKI_GKS,		--2004.07.24 Add By Kos
			SYARYO_KBN_1,
			SYARYO_SU_1,
			SYARYO_TANKA_1,
			SYARYO_KBN_2,
			SYARYO_SU_2,
			SYARYO_TANKA_2,
			TSUMI_SAGYOIN_SU,
			TSUMI_SAGYOIN_TANKA,
			OROSHI_SAGYOIN_SU,
			OROSHI_SAGYOIN_TANKA,
			OPTION_MEI,
			SHOHIZEI_KBN,			--2004.07.21 Add By Kos
			UPDATE_DT,
			UPDATE_TNT_ID,
			GAMEN_ID,
			DELETE_FLG
	FROM	T_JUCHU_RYOKIN
	WHERE UKETSUKE_NO = @UKETSUKE_NO
	AND   SOSHIKI_CD  = @SOSHIKI_CD
	SELECT @ERR = @@ERROR
	IF @ERR != 0
	BEGIN
		GOTO MAKE_IRAIMOTO_RYOKINDATA_ETC_ERR
	END
--    SET @LOG_MSG = '依頼元組織の料金情報データ作成='+CONVERT(VARCHAR,@ERR)
--    EXEC WRITE_PRCLOG 'RYOKINDATASP1',@UKETSUKE_NO,@IRAIMOTO_SOSHIKI_CD,'D',@LOG_MSG
	--受注詳細の更新
	UPDATE T_JUCHU_SYOSAI SET 
			RYOKIN_MODE = @RYOKIN_MODE
	WHERE UKETSUKE_NO = @UKETSUKE_NO
	AND   SOSHIKI_CD  = @IRAIMOTO_SOSHIKI_CD
	SELECT @ERR = @@ERROR
	IF @ERR != 0
	BEGIN
		GOTO MAKE_IRAIMOTO_RYOKINDATA_ETC_ERR
	END
--    SET @LOG_MSG = '受注詳細の更新='+CONVERT(VARCHAR,@ERR)
--    EXEC WRITE_PRCLOG 'RYOKINDATASP1',@UKETSUKE_NO,@IRAIMOTO_SOSHIKI_CD,'D',@LOG_MSG
	SET @ERR = -999
MAKE_IRAIMOTO_RYOKINDATA_ETC_EXIT:
	RETURN @ERR
MAKE_IRAIMOTO_RYOKINDATA_ETC_ERR:
	IF @ERR = -99
		SET @LOG_MSG = '受注詳細データなし'
    ELSE
        SET @LOG_MSG = 'SQLエラー発生 Status:'+CONVERT(VARCHAR(10),@ERR)
	EXEC WRITE_PRCLOG 'RYOKINDATASP1',@UKETSUKE_NO,@IRAIMOTO_SOSHIKI_CD,'E',@LOG_MSG
	GOTO MAKE_IRAIMOTO_RYOKINDATA_ETC_EXIT
END

GO

