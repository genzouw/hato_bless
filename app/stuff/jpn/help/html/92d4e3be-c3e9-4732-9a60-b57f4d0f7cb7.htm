<html xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:MSHelp="http://msdn.microsoft.com/mshelp" xmlns:mshelp="http://msdn.microsoft.com/mshelp" xmlns:ddue="http://ddue.schemas.microsoft.com/authoring/2003/5" xmlns:msxsl="urn:schemas-microsoft-com:xslt"><head><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=UTF-8" /><META NAME="save" CONTENT="history" /><title>アダプティブ バッファリングの使用</title><meta name="Language" content="ja-jp" /><meta name="System.Keywords" content="adaptive" /><meta name="System.Keywords" content="アダプティブ バッファリング" /><meta name="System.Keywords" content="isWrapperFor" /><meta name="System.Keywords" content="selectMethod" /><meta name="System.Keywords" content="unwrap" /><meta name="Microsoft.Help.Id" content="92d4e3be-c3e9-4732-9a60-b57f4d0f7cb7" /><meta name="Description" content="アダプティブ バッファリングは、サーバー カーソルのオーバーヘッドを発生させることなく、あらゆる種類の大きな値のデータを取得できるように設計されています。アプリケーションでは、ドライバーによってサポートされるすべてのバージョンの SQL Server でアダプティブ バッファリング機能を使用できます。" /><meta name="Microsoft.Help.ContentType" content="Concepts" /><link rel="stylesheet" type="text/css" href="../local/Classic.css" /><script type="text/javascript" src="../scripts/EventUtilities.js">&amp;nbsp;</script><script type="text/javascript" src="../scripts/SplitScreen.js">&amp;nbsp;</script><script type="text/javascript" src="../scripts/Dropdown.js">&amp;nbsp;</script><script type="text/javascript" src="../scripts/script_manifold.js">&amp;nbsp;</script><script type="text/javascript" src="../scripts/script_feedBack.js">&amp;nbsp;</script><script type="text/javascript" src="../scripts/CheckboxMenu.js">&amp;nbsp;</script><script type="text/javascript" src="../scripts/CommonUtilities.js">&amp;nbsp;</script><script type="text/javascript" src="../local/script_main.js">&amp;nbsp;</script></head><body><div id="header"><table id="bottomTable" cellpadding="0" cellspacing="0"><tr><td align="left"><span id="headerBold">アダプティブ バッファリングの使用</span></td></tr></table><table id="gradientTable"><tr><td class="nsrBottom" background="../icons/gradient.gif" /></tr></table></div><div id="mainSection"><div id="mainBody"><div class="introduction"><p>アダプティブ バッファリングは、サーバー カーソルのオーバーヘッドを発生させることなく、あらゆる種類の大きな値のデータを取得できるように設計されています。アプリケーションでは、ドライバーによってサポートされるすべてのバージョンの SQL Server でアダプティブ バッファリング機能を使用できます。</p><p>通常、Microsoft JDBC Driver for SQL Server がクエリを実行するときは、すべての結果をサーバーからアプリケーション メモリに取り出します。この方法では、SQL Server でのリソースの消費が最小化されますが、非常に大きな結果を生成するクエリの場合は、JDBC アプリケーションで <b>OutOfMemoryError</b> がスローされることがあります。</p><p>アプリケーションで非常に大きな結果を処理できるようにするために、Microsoft JDBC Driver for SQL Server はアダプティブ バッファリングを提供しています。ドライバーでアダプティブ バッファリングを使用すると、ステートメントの実行結果を SQL Server から取得する処理が、すべて一度にではなく、アプリケーションの必要に応じて行われます。また、アプリケーションからアクセスできなくなった結果は、ドライバーによって直ちに破棄されます。アダプティブ バッファリングは次のような場合に効果的です。</p><ul><li><p><b>クエリが非常に大きな結果セットを生成する :</b> アプリケーションでは、メモリに格納できる行よりも多くの行を生成する SELECT ステートメントを実行できます。以前のリリースでは、<b>OutOfMemoryError</b> を避けるために、サーバー カーソルを使用する必要がありました。アダプティブ バッファリングは、サーバー カーソルを使用することなく、任意の大きな結果セットを順方向専用かつ読み取り専用で渡せるようにします。</p></li><li><p><b>クエリが非常に大きな </b><a href="eaffcff1-286c-459f-83da-3150778480c9.htm">SQLServerResultSet</a><b> 列または </b><a href="30710a63-c05d-47d9-9cf9-c087a1c76373.htm">SQLServerCallableStatement</a><b> OUT パラメーター値を生成する:</b> アプリケーションでは、アプリケーション メモリに完全に含めるには大きすぎる単一の値 (列または OUT パラメーター) を取得できます。アダプティブ バッファリングを使用すると、クライアント アプリケーションで <b>getAsciiStream</b> メソッド、<b>getBinaryStream,</b> メソッド、または <b>getCharacterStream</b> メソッドを使用して、そのような値をストリームとして取得できます。アプリケーションは、ストリームから読み取るときと同じようにして、SQL Server から値を取得します。</p><p /></li></ul><div style="margin: .5em 1.5em .5em 1.5em"><b></b><p>アダプティブ バッファリングでは、必要な量のデータだけが、JDBC ドライバーによってバッファリングされます。ドライバーにバッファーのサイズを制御したり制限したりするためのパブリック メソッドは備わっていません。</p></div></div><h1 class="heading">アダプティブ バッファリングの設定</h1><div id="sectionSection0" class="section" name="collapseableSection" style=""><p>JDBC ドライバー Version 2.0 以降では、ドライバーの既定の動作は "<span sdata="langKeyword" value="adaptive"><span class="keyword">adaptive</span></span>" です。つまり、アプリケーションから明示的に要求しなくても、アダプティブ バッファリングの動作が適用されます。ただし、バージョン 1.2 リリースでは、"<span sdata="langKeyword" value="full"><span class="keyword">full</span></span>" が既定のバッファリング モードであるため、アプリケーションから明示的にアダプティブ バッファリング モードを要求する必要があります。</p><p>アプリケーションがステートメントの実行でアダプティブ バッファリングを使用するように要求できる方法は 3 つあります。</p><ul><li><p>アプリケーションで、接続プロパティ <span sdata="langKeyword" value="responseBuffering"><span class="keyword">responseBuffering</span></span> を "adaptive" に設定できます。接続プロパティの設定の詳細については、「<span sdata="link"><a href="f1b62700-f046-488d-bd6b-a5cd8fc345b7.htm">接続プロパティの設定</a></span>」を参照してください。</p></li><li><p>アプリケーションで、<a href="097434fd-2b74-411c-a5ed-eba04481dde5.htm">SQLServerDataSource</a> オブジェクトの <a href="c9e43ff2-8117-4dca-982d-83c863d0c8e1.htm">setResponseBuffering</a> メソッドを使用して、その <a href="097434fd-2b74-411c-a5ed-eba04481dde5.htm">SQLServerDataSource</a> オブジェクトを通じて作成されたすべての接続の応答バッファリング モードを設定できます。</p></li><li><p>アプリケーションで、<a href="ec24963c-8b51-4838-91e9-1fbfa2347451.htm">SQLServerStatement</a> クラスの <a href="9f489835-6cda-4c8c-b139-079639a169cf.htm">setResponseBuffering</a> メソッドを使用して、特定のステートメント オブジェクトの応答バッファリング モードを設定できます。</p></li></ul><p>JDBC Driver Version 1.2 を使用している場合、<a href="9f489835-6cda-4c8c-b139-079639a169cf.htm">setResponseBuffering</a> メソッドを使用するには、Statement オブジェクトを <a href="ec24963c-8b51-4838-91e9-1fbfa2347451.htm">SQLServerStatement</a> クラスにキャストする必要があります。「<span sdata="link"><a href="6c986144-3854-4352-8331-e79eccbefc28.htm">大きなデータを読み取るサンプル</a></span>」および「<span sdata="link"><a href="58c76635-a117-4661-8781-d6cb231c5809.htm">ストアド プロシージャで大きなデータを読み取るサンプル</a></span>」のコード例に示されているのは、この古い使用法です。</p><p>ただし、JDBC ドライバー Version 2.0 では、実装されているクラス階層を意識することなく、<a href="53f3291f-d43a-476b-a656-d86168dacf6c.htm">isWrapperFor</a> メソッドおよび <a href="ce680176-ef04-4e44-bb6c-ec50bd06e7e6.htm">unwrap</a> メソッドを使用して、ベンダー固有の機能にアクセスできます。コード例については、「<span sdata="link"><a href="76ecc05f-a77d-40a2-bab9-91a7fcf17347.htm">大きなデータを更新するサンプル</a></span>」を参照してください。</p></div><h1 class="heading">アダプティブ バッファリングによる大きなデータの取得</h1><div id="sectionSection1" class="section" name="collapseableSection" style=""><p>get&lt;Type&gt;Stream メソッドを使用して大きな値を 1 回読み取り、SQL Server によって返された順序で ResultSet 列および CallableStatement OUT パラメーターにアクセスする場合、アダプティブ バッファリングにより、結果を処理するときのアプリケーション メモリの使用量を最小限に抑えることができます。アダプティブ バッファリングを使用すると、次のようになります。</p><ul><li><p><a href="eaffcff1-286c-459f-83da-3150778480c9.htm">SQLServerResultSet</a> クラスおよび <a href="30710a63-c05d-47d9-9cf9-c087a1c76373.htm">SQLServerCallableStatement</a> クラスで定義されている <b>get&lt;Type&gt;Stream</b> メソッドは、既定では 1 回だけ読み取るストリームを返します。ただし、アプリケーションによってマークされていれば、このストリームをリセットできます。アプリケーションでストリームの <span class="code">reset</span> を行う必要がある場合、まずそのストリームに対して <span class="code">mark</span> メソッドを呼び出す必要があります。</p></li><li><p><a href="24170524-e1ab-4e80-8fd1-6688efacfbde.htm">SQLServerClob</a> クラスおよび <a href="88bd8623-889d-4b5d-99ff-c85b32f3ff5c.htm">SQLServerBlob</a> クラスで定義されている <b>get&lt;Type&gt;Stream</b> メソッドは、<span class="code">mark</span> メソッドを呼び出すことなく、常にストリームの開始位置に位置を変更できるストリームを返します。</p></li></ul><p>アプリケーションでアダプティブ バッファリングを使用する場合、<b>get&lt;Type&gt;Stream</b> メソッドによって取得される値は、1 回だけ取得できます。同じオブジェクトの <b>get&lt;Type&gt;Stream</b> メソッドを呼び出した後に、同じ列またはパラメーターで任意の <b>get&lt;Type&gt;</b> メソッドを呼び出すと、"このデータはアクセスされており、この列またはパラメーターに対しては使用できません" という意味のメッセージで例外がスローされます。</p></div><h1 class="heading">アダプティブ バッファリングを使用するうえでのガイドライン</h1><div id="sectionSection2" class="section" name="collapseableSection" style=""><p>アプリケーションによるメモリ使用量を最小限に抑えるには、開発者は次の重要なガイドラインに従う必要があります。</p><ul><li><p>アプリケーションが非常に大きな結果セットを処理できるようにするために、接続文字列プロパティ <span sdata="langKeyword" value="selectMethod=cursor"><span class="keyword">selectMethod=cursor</span></span> を使用しないようにします。アダプティブ バッファリング機能を使用すると、アプリケーションがサーバー カーソルを使用することなく、非常に大きな順方向専用の読み取り専用結果セットを処理することが可能になります。ただし、<span sdata="langKeyword" value="selectMethod=cursor"><span class="keyword">selectMethod=cursor</span></span> を設定した場合、その接続で生成された順方向専用、読み取り専用のすべての結果セットに影響が及ぶ点に注意してください。つまり、わずかな行数の短い結果セットを定期的に処理するようなアプリケーションでは、結果セットごとにサーバー カーソルを作成し、読み取って、閉じる操作を繰り返すことになって、クライアント側とサーバー側の両方でリソース消費が (<span sdata="langKeyword" value="selectMethod"><span class="keyword">selectMethod</span></span> を <span sdata="langKeyword" value="cursor"><span class="keyword">cursor</span></span> に設定しなかった場合と比較して) 増えることになります。</p></li><li><p>大きなテキスト値またはバイナリ値は、<b>getBlob</b> メソッドまたは <b>getClob</b> メソッドではなく、<b>getAsciiStream</b> メソッド、<b>getBinaryStream</b> メソッド、または <b>getCharacterStream</b> メソッドを使用して、ストリームとして読み取ります。Version 1.2 リリース以降の <a href="30710a63-c05d-47d9-9cf9-c087a1c76373.htm">SQLServerCallableStatement</a> クラスには、この目的のための新しい <b>get&lt;Type&gt;Stream</b> メソッドがあります。</p></li><li><p>大きな値を含む可能性がある列は、SELECT ステートメント内で列リストの最後に配置し、<a href="eaffcff1-286c-459f-83da-3150778480c9.htm">SQLServerResultSet</a> の <b>get&lt;Type&gt;Stream</b> メソッドを使用して、選択された順序で列にアクセスします。</p></li><li><p>大きな値を含む可能性がある OUT パラメーターは、<a href="30710a63-c05d-47d9-9cf9-c087a1c76373.htm">SQLServerCallableStatement</a> の作成に使用する SQL のパラメーターの一覧の最後で宣言します。また、<a href="30710a63-c05d-47d9-9cf9-c087a1c76373.htm">SQLServerCallableStatement</a> の <b>get&lt;Type&gt;Stream</b> メソッドを使用して、宣言された順序で OUT パラメーターにアクセスします。</p></li><li><p>同じ接続で複数のステートメントを同時に実行しないでください。前のステートメントの結果を処理する前に別のステートメントを実行すると、処理されない結果がアプリケーションのメモリにバッファリングされることがあります。</p></li><li><p>場合によっては、<span sdata="langKeyword" value="responseBuffering=adaptive"><span class="keyword">responseBuffering=adaptive</span></span> ではなく <span sdata="langKeyword" value="selectMethod=cursor"><span class="keyword">selectMethod=cursor</span></span> を使用した方がよいケースもあります。たとえば、次のようなケースです。</p><ul><li><p>ユーザー入力の後で 1 つずつ行を読み取るなど、順方向専用、読み取り専用の結果セットを少しずつ処理するようなアプリケーションでは、<span sdata="langKeyword" value="responseBuffering=adaptive"><span class="keyword">responseBuffering=adaptive</span></span> よりも <span sdata="langKeyword" value="selectMethod=cursor"><span class="keyword">selectMethod=cursor</span></span> を使用した方が、SQL Server によるリソース使用量が少なくて済みます。</p></li><li><p>同じ接続で順方向専用、読み取り専用の複数の結果セットを同時に処理するようなアプリケーションでは、<span sdata="langKeyword" value="responseBuffering=adaptive"><span class="keyword">responseBuffering=adaptive</span></span> の代わりに <span sdata="langKeyword" value="selectMethod=cursor"><span class="keyword">selectMethod=cursor</span></span> を使用することで、ドライバーがこれらの結果セットを処理する際に必要となるメモリ量を減らすことができます。</p></li></ul><p>どちらのケースも、サーバー カーソルを作成し、読み取って、閉じるという処理のオーバーヘッドを考慮する必要があります。</p></li></ul><p>スクロール可能な結果セットと順方向専用の更新可能な結果セットの推奨事項を以下に補足します。</p><ul><li><p>スクロール可能な結果セット : 行をブロック単位でフェッチする場合、常に <a href="eaffcff1-286c-459f-83da-3150778480c9.htm">SQLServerResultSet</a> オブジェクトの <a href="7bc96930-b0c9-42f6-8df9-1d8d824408b3.htm">getFetchSize</a> メソッドで指定された行数がメモリに読み込まれます。これは、アダプティブ バッファリングが有効になっていたとしても変わりません。スクロールによって <b>OutOfMemoryError</b> が発生した場合は、フェッチされる行数を減らすことによって対処できます。フェッチ サイズの行数を減らすには、<a href="eaffcff1-286c-459f-83da-3150778480c9.htm">SQLServerResultSet</a> オブジェクトの <a href="233bf4f8-4758-42d0-a80b-33e34fa78027.htm">setFetchSize</a> メソッドを呼び出します。必要であれば、行数を 1 に設定することも検討してください。それでも <b>OutOfMemoryError</b> を回避できない場合は、あまり大きな列がスクロール可能な結果セットに含まれないようにします。</p></li><li><p>順方向専用の更新可能な結果セット : 行をブロック単位でフェッチする場合、その接続でアダプティブ バッファリングが有効になっていたとしても、通常は <a href="eaffcff1-286c-459f-83da-3150778480c9.htm">SQLServerResultSet</a> オブジェクトの <a href="7bc96930-b0c9-42f6-8df9-1d8d824408b3.htm">getFetchSize</a> メソッドで指定された行数がメモリに読み込まれます。<a href="eaffcff1-286c-459f-83da-3150778480c9.htm">SQLServerResultSet</a> オブジェクトの <a href="60248447-6908-4036-a779-a501453cd553.htm">next</a> メソッドを呼び出すと <b>OutOfMemoryError</b> が発生する場合は、フェッチされる行数を減らすことによって対処できます。フェッチ サイズの行数を減らすには、<a href="eaffcff1-286c-459f-83da-3150778480c9.htm">SQLServerResultSet</a> オブジェクトの <a href="233bf4f8-4758-42d0-a80b-33e34fa78027.htm">setFetchSize</a> メソッドを呼び出します。必要であれば、行数を 1 に設定することも検討してください。<a href="ec24963c-8b51-4838-91e9-1fbfa2347451.htm">SQLServerStatement</a> オブジェクトの <a href="9f489835-6cda-4c8c-b139-079639a169cf.htm">setResponseBuffering</a> メソッドを "<span sdata="langKeyword" value="adaptive"><span class="keyword">adaptive</span></span>" パラメーターで呼び出した後、ステートメントを実行することによって、行のバッファリングを強制的に抑制することもできます。結果セットはスクロールできないため、アプリケーションから、いずれかの <b>get&lt;Type&gt;Stream</b> メソッドで大きな列の値にアクセスした場合、アプリケーションが読み取りを始めると直ちに、ドライバーが、順方向専用、読み取り専用の結果セットの場合とまったく同じように、その値を破棄します。</p></li></ul></div><span id="seeAlsoSpan"><h1 class="heading">関連項目</h1></span><div id="seeAlsoSection" class="section" name="collapseableSection" style=""><div class="seeAlsoStyle"><span sdata="link"><a href="e1592499-b87b-45ee-bab8-beaba8fde841.htm">JDBC ドライバーによるパフォーマンスと信頼性の強化</a></span></div></div></div><div id="footer" class="section"><span id="feedbackarea">このトピックに関する<a href="javascript:SubmitFeedback('DevDocs@Microsoft.com','','','','8.0.12060.10000','%0\dフィードバックありがとうございます。開発チームは、皆様からのフィードバックに基づいてドキュメントを改善しています。フィードバックを確認中、内容の確認または解決策に関するご意見をうかがうために電子メールをお送りする場合があります。お客様の電子メール アドレスをそれ以外の目的で使用することはありません。また、確認完了後はお客様の電子メール アドレス情報を削除させていただきます。%0\Aマイクロソフトのプライバシーに関する声明の詳細については、http://privacy.microsoft.com/ja-jp/default.aspx を参照してください。%0\A%0\d','カスタマー フィードバック');">フィードバック</a>を Microsoft にお送りください。</span><span id="copyrightarea"><p><a href="9bad553b-9e70-4696-8499-2e35f772a1e0.htm">© 2012 Microsoft.All rights reserved.</a></p></span></div></div></body></html>