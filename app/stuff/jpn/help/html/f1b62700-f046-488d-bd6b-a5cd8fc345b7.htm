<html xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:MSHelp="http://msdn.microsoft.com/mshelp" xmlns:mshelp="http://msdn.microsoft.com/mshelp" xmlns:ddue="http://ddue.schemas.microsoft.com/authoring/2003/5" xmlns:msxsl="urn:schemas-microsoft-com:xslt"><head><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=UTF-8" /><META NAME="save" CONTENT="history" /><title>接続プロパティの設定</title><meta name="Language" content="ja-jp" /><meta name="System.Keywords" content="接続プロパティ" /><meta name="Microsoft.Help.Id" content="f1b62700-f046-488d-bd6b-a5cd8fc345b7" /><meta name="Description" content="接続文字列のプロパティは、さまざまな方法で指定できます。" /><meta name="Microsoft.Help.ContentType" content="Concepts" /><link rel="stylesheet" type="text/css" href="../local/Classic.css" /><script type="text/javascript" src="../scripts/EventUtilities.js">&amp;nbsp;</script><script type="text/javascript" src="../scripts/SplitScreen.js">&amp;nbsp;</script><script type="text/javascript" src="../scripts/Dropdown.js">&amp;nbsp;</script><script type="text/javascript" src="../scripts/script_manifold.js">&amp;nbsp;</script><script type="text/javascript" src="../scripts/script_feedBack.js">&amp;nbsp;</script><script type="text/javascript" src="../scripts/CheckboxMenu.js">&amp;nbsp;</script><script type="text/javascript" src="../scripts/CommonUtilities.js">&amp;nbsp;</script><script type="text/javascript" src="../local/script_main.js">&amp;nbsp;</script></head><body><div id="header"><table id="bottomTable" cellpadding="0" cellspacing="0"><tr><td align="left"><span id="headerBold">接続プロパティの設定</span></td></tr></table><table id="gradientTable"><tr><td class="nsrBottom" background="../icons/gradient.gif" /></tr></table></div><div id="mainSection"><div id="mainBody"><div class="introduction"><p>接続文字列のプロパティは、さまざまな方法で指定できます。</p><ul><li><p><b>DriverManager</b> クラスを使用して接続するときは、接続 URL における「名前=値」形式のプロパティとして指定できます。</p></li><li><p><b>DriverManager</b> クラスの <b>Connect</b> メソッドの <span class="parameter" sdata="paramReference">Properties</span> パラメーターにおける「名前=値」形式のプロパティとして指定できます。</p></li><li><p>ドライバーのデータ ソースの適切な setter メソッドの値として指定できます。次に例を示します。</p><div class="sampleCode"><span codeLanguage="other"><pre><span class="label">datasource.setServerName(value)</span><br /><span class="label">datasource.setDatabaseName(value)</span></pre></span></div></li></ul></div><h1 class="heading">解説</h1><div id="sectionSection0" class="section" name="collapseableSection" style=""><p>プロパティ名の大文字と小文字は区別されず、重複したプロパティ名は次の順序で解決されます。</p><ol><li><p>API 引数 (user、password など)</p></li><li><p>プロパティ コレクション。</p></li><li><p>接続文字列の最後のインスタンス。</p></li></ol><p>プロパティ名には不明な値を使用することもできます。JDBC ドライバーはこのような値の大文字と小文字の区別について検証しません。</p><p>シノニムを使用できます。これは、重複したプロパティ名と同じ順序で解決されます。</p><p>次の表は、JDBC ドライバーで現在使用できるすべての接続文字列プロパティを示しています。</p><div class="tableSection"><table width="50%" cellspacing="2" cellpadding="5" frame="lhs"><tr><th><p>プロパティ</p></th><th><p>型</p></th><th><p>既定値</p></th><th><p>説明</p></th></tr><tr><td><p>applicationIntent</p></td><td><p>String</p></td><td><p><span sdata="langKeyword" value="ReadWrite"><span class="keyword">ReadWrite</span></span></p></td><td><p>サーバーに接続するときに、アプリケーション ワークロードの型を宣言します。可能な値は、<span sdata="langKeyword" value="ReadOnly"><span class="keyword">ReadOnly</span></span> と <span sdata="langKeyword" value="ReadWrite"><span class="keyword">ReadWrite</span></span> です。詳細については、「<span sdata="link"><a href="62de4be6-b027-427d-a7e5-352960e42877.htm">高可用性、障害回復のための JDBC Driver のサポート</a></span>」を参照してください。</p></td></tr><tr><td><p>applicationName</p></td><td><p>String</p><p>[128 文字以下]</p></td><td><p>null</p></td><td><p>アプリケーション名、または "Microsoft JDBC Driver for SQL Server" (名前が指定されていない場合) です。個別のアプリケーションを識別するために、さまざまな SQL Server プロファイリング ツールおよびロギング ツールで使用されます。</p></td></tr><tr><td><p>authenticationScheme</p></td><td><p>String</p></td><td><p>"NativeAuthentication"</p></td><td><p>アプリケーションで使用する統合セキュリティの種類を示します。可能な値は、<span sdata="langKeyword" value="JavaKerberos"><span class="keyword">JavaKerberos</span></span> と既定の <span sdata="langKeyword" value="NativeAuthentication"><span class="keyword">NativeAuthentication</span></span> です。</p><p><span sdata="langKeyword" value="authenticationScheme=JavaKerberos"><span class="keyword">authenticationScheme=JavaKerberos</span></span> を使用する場合は、<span sdata="langKeyword" value="serverName"><span class="keyword">serverName</span></span> プロパティに完全修飾ドメイン名 (FQDN) を指定する必要があります。指定しない場合は、エラーが発生します (Kerberos データベースにサーバーが見つからない)。</p><p><span sdata="langKeyword" value="authenticationScheme"><span class="keyword">authenticationScheme</span></span> の使用の詳細については、「<span sdata="link"><a href="687802dc-042a-4363-89aa-741685d165b3.htm">Kerberos 統合認証による SQL Server への接続</a></span>」を参照してください。</p></td></tr><tr><td><p>databaseName、database</p></td><td><p>String</p><p>[128 文字以下]</p></td><td><p>null</p></td><td><p>接続するデータベース名です。指定しない場合は、既定のデータベースへの接続が確立されます。</p></td></tr><tr><td><p>disableStatementPooling</p></td><td><p>boolean</p><p>["true"|"false"]</p></td><td><p>true</p></td><td><p>現在は、値 "true" のみがサポートされています。"false" に設定した場合は、例外が発生します。</p></td></tr><tr><td><p>encrypt</p></td><td><p>boolean</p><p>["true"|"false"]</p></td><td><p>false</p></td><td><p>SQL Server で、サーバーに証明書がインストールされている場合に、クライアントとサーバーの間で送信されるすべてのデータに対して SSL (Secure Sockets Layer) 暗号化が使用されるようにするには、"true" に設定します。既定値は false です。</p></td></tr><tr><td><p>failoverPartner</p></td><td><p>String</p></td><td><p>null</p></td><td><p>データベース ミラーリング構成で使用されるフェールオーバー サーバーの名前です。このプロパティは、プリンシパル サーバーへの初期接続に失敗した場合に使用されます。初期接続が行われた後は、このプロパティは無視されます。databaseName プロパティと組み合わせて使用する必要があります。</p><div style="margin: .5em 1.5em .5em 1.5em"><b></b><p>接続文字列の中で failoverPartner プロパティを指定するときに、フェールオーバー パートナー インスタンスのサーバー インスタンスのポート番号を指定することはできません。ただし、プリンシパル サーバー インスタンスの serverName、instanceName、portNumber の各プロパティ、およびフェールオーバー パートナー インスタンスの failoverPartner プロパティを同じ接続文字列の中で指定することはできます。</p></div><p><span sdata="langKeyword" value="Server"><span class="keyword">Server</span></span> 接続プロパティの仮想ネットワーク名を指定した場合は、データベース ミラーリングを使用できません。詳細については、「<span sdata="link"><a href="62de4be6-b027-427d-a7e5-352960e42877.htm">高可用性、障害回復のための JDBC Driver のサポート</a></span>」を参照してください。</p></td></tr><tr><td><p>hostNameInCertificate</p></td><td><p>String</p></td><td><p>null</p></td><td><p>SQL Server の SSL 証明書の検証に使用されるホスト名です。</p><p>hostNameInCertificate プロパティが指定されていないか null に設定されている場合、Microsoft JDBC Driver for SQL Server は、接続 URL の <span sdata="langKeyword" value="serverName"><span class="keyword">serverName</span></span> プロパティ値をホスト名として使用して SQL Server の SSL 証明書を検証します。</p><div style="margin: .5em 1.5em .5em 1.5em"><b></b><p>このプロパティは、<span sdata="langKeyword" value="encrypt"><span class="keyword">encrypt</span></span> プロパティおよび <span sdata="langKeyword" value="trustServerCertificate"><span class="keyword">trustServerCertificate</span></span> プロパティと組み合わせて使用されます。このプロパティが証明書の検証に影響するのは、<span sdata="langKeyword" value="encrypt"><span class="keyword">encrypt</span></span> プロパティが "true" に設定されていて、<span sdata="langKeyword" value="trustServerCertificate"><span class="keyword">trustServerCertificate</span></span> プロパティが "false" に設定されている場合だけです。SSL 接続に成功するためには、<span sdata="langKeyword" value="hostNameInCertificate"><span class="keyword">hostNameInCertificate</span></span> に渡された値が、サーバー証明書に含まれる Subject Alternate Name (SAN) の Common Name (CN) または DNS 名と厳密に一致している必要があります。詳細については、「<span sdata="link"><a href="073f3b9e-8edd-4815-88ea-de0655d0325e.htm">SSL のサポートについて</a></span>」を参照してください。</p></div></td></tr><tr><td><p>instanceName</p></td><td><p>String</p><p>[128 文字以下]</p></td><td><p>null</p></td><td><p>接続する SQL Server のインスタンス名です。指定しない場合は、既定のインスタンスへの接続が確立されます。instanceName と port の両方を指定する場合については、port の注を参照してください。</p><p><span sdata="langKeyword" value="Server"><span class="keyword">Server</span></span> 接続プロパティの仮想ネットワーク名を指定した場合は、<span sdata="langKeyword" value="instanceName"><span class="keyword">instanceName</span></span> 接続プロパティを使用できません。詳細については、「<span sdata="link"><a href="62de4be6-b027-427d-a7e5-352960e42877.htm">高可用性、障害回復のための JDBC Driver のサポート</a></span>」を参照してください。</p></td></tr><tr><td><p>integratedSecurity</p></td><td><p>boolean</p><p>["true"|"false"]</p></td><td><p>false</p></td><td><p>アプリケーションのユーザーを認証するために SQL Server によって Windows 資格情報が使用されることを示す場合は、"true" に設定します。"true" の場合、JDBC ドライバーは、コンピューターまたはネットワーク ログオン時に提供された資格情報を見つけるために、ローカル コンピューターの資格情報のキャッシュを検索します。"false" の場合は、ユーザー名とパスワードを指定する必要があります。</p><div style="margin: .5em 1.5em .5em 1.5em"><b></b><p>この接続プロパティは、Microsoft Windows オペレーティング システムのみでサポートされています。</p></div></td></tr><tr><td><p>lastUpdateCount</p></td><td><p>boolean</p><p>["true"|"false"]</p></td><td><p>true</p></td><td><p>値が "true" の場合、サーバーに渡された SQL ステートメントから最終的な更新数のみを返します。また、SELECT、INSERT、または DELETE ステートメントのいずれか 1 つで使用して、サーバーのトリガーにより追加された更新数を無視することができます。このプロパティを "false" に設定すると、サーバーのトリガーにより返される更新数を含む、すべての更新数が返されます。</p><div style="margin: .5em 1.5em .5em 1.5em"><b></b><p>このプロパティが適用されるのは、<a href="10ae662a-ce3c-4b24-875c-5c2df319d93b.htm">executeUpdate</a> メソッドと一緒に使用された場合だけです。その他のすべての <b>execute</b> メソッドは、すべての結果および更新数を返します。</p><p>このプロパティは、サーバーのトリガーにより返される更新数にのみ影響します。トリガーの実行の一部として得られる結果セットまたはエラーには影響しません。</p></div></td></tr><tr><td><p>lockTimeout</p></td><td><p>int</p></td><td><p>-1</p></td><td><p>データベースがロック タイムアウトを通知するまでに待機する時間 (ミリ秒) です。既定では、無期限に待機します。指定されている場合、この値は接続上のすべてのステートメントに対する既定値になります。特定のステートメントに対するタイムアウトは、<span class="code">Statement.setQueryTimeout()</span> を使用して設定できることに注意してください。この値は、待機しないことを示す 0 に設定できます。</p></td></tr><tr><td><p>loginTimeout</p></td><td><p>int [0..65535]</p></td><td><p>15</p></td><td><p>ドライバーがタイムアウトを通知して接続を失敗させるまでに待機する時間 (秒) です。0 の値は、タイムアウトが既定のシステム タイムアウトであることを示します。既定のシステム タイムアウトは、既定では 15 秒に指定されています。0 以外の値は、ドライバーがタイムアウトを通知して接続を失敗させるまでに待機する時間 (秒) を示します。</p><p><span sdata="langKeyword" value="Server"><span class="keyword">Server</span></span> 接続プロパティの仮想ネットワーク名を指定する場合は、フェールオーバー接続が成功するまで十分な時間がとれるように、3 分以上のタイムアウト値を指定する必要があります。詳細については、「<span sdata="link"><a href="62de4be6-b027-427d-a7e5-352960e42877.htm">高可用性、障害回復のための JDBC Driver のサポート</a></span>」を参照してください。</p></td></tr><tr><td><p>multiSubnetFailover</p></td><td><p>Boolean</p></td><td><p>false</p></td><td><p>SQL Server 2012 可用性グループまたは SQL Server 2012 フェールオーバー クラスター インスタンスの可用性グループ リスナーに接続する場合は必ず <span sdata="langKeyword" value="multiSubnetFailover=true"><span class="keyword">multiSubnetFailover=true</span></span> を指定してください。<span sdata="langKeyword" value="multiSubnetFailover=true"><span class="keyword">multiSubnetFailover=true</span></span> に設定することにより、現在アクティブになっているサーバーをより高速に検出して接続するように Microsoft JDBC Driver for SQL Server が構成されます。可能な値は、true と false です。詳細については、「<span sdata="link"><a href="62de4be6-b027-427d-a7e5-352960e42877.htm">高可用性、障害回復のための JDBC Driver のサポート</a></span>」を参照してください。</p><p><a href="b5eaad8a-31ef-44ac-af11-d5caa13ac3e2.htm">getPropertyInfo</a>、<a href="1e8cb175-5f4c-4208-b4f5-3646990a30e3.htm">getMultiSubnetFailover</a>、および <a href="7ffd282d-c2f6-4d1b-a7a6-859d18b388aa.htm">setMultiSubnetFailover</a> で、<span sdata="langKeyword" value="multiSubnetFailover"><span class="keyword">multiSubnetFailover</span></span> 接続プロパティにプログラムでアクセスできます。</p></td></tr><tr><td><p>packetSize</p></td><td><p>int [-1| 0 | 512..32767]</p></td><td><p>8000</p></td><td><p>SQL Server との通信に使用されるネットワーク パケット サイズです (バイトで指定します)。値が -1 の場合は、サーバーの既定のパケット サイズが使用されます。値が 0 の場合は、最大値 (32767) が使用されます。このプロパティが許容範囲外の値に設定されている場合は、例外が発生します。</p><div style="margin: .5em 1.5em .5em 1.5em"><b></b><p>暗号化を有効 (encrypt=true) にしている場合に packetSize プロパティを使用することはお勧めしません。使用すると、接続エラーが発生する可能性があります。詳細については、<a href="097434fd-2b74-411c-a5ed-eba04481dde5.htm">SQLServerDataSource</a> クラスの <a href="5d490edc-a223-4870-a838-784952497e5f.htm">setPacketSize</a> メソッドのトピックを参照してください。</p></div></td></tr><tr><td><p>password</p></td><td><p>String</p><p>[128 文字以下]</p></td><td><p>null</p></td><td><p>データベース パスワードです。</p></td></tr><tr><td><p>portNumber、port</p></td><td><p>int [0..65535]</p></td><td><p>1433</p></td><td><p>SQL Server が待機しているポートです。ポート番号が接続文字列に指定されている場合は、sqlbrowser に対する要求は作成されません。port と instanceName の両方が指定されている場合は、指定されたポートへの接続が確立されます。ただし、<span sdata="langKeyword" value="instanceName"><span class="keyword">instanceName</span></span> の検証が行われ、ポートと一致しない場合はエラーがスローされます。</p><div style="margin: .5em 1.5em .5em 1.5em"><b></b><p>sqlbrowser を使用する場合よりもセキュリティが向上するため、常にポート番号を指定することをお勧めします。</p></div></td></tr><tr><td><p>responseBuffering</p></td><td><p>String</p><p>["full"|"adaptive"]</p></td><td><p>adaptive</p></td><td><p>このプロパティを "adaptive" に設定すると、必要に応じて最小限のデータがバッファリングされます。既定のモードは "adaptive" です。</p><p>このプロパティが "full" に設定されている場合、ステートメントの実行時に結果セット全体がサーバーから読み取られます。</p><div style="margin: .5em 1.5em .5em 1.5em"><b></b><p /><p>JDBC ドライバーを Version 1.2 からアップグレードすると、既定のバッファリング動作が "adaptive" になります。アプリケーションで "responseBuffering" プロパティが設定されていない場合に Version 1.2 の既定の動作を維持するには、接続プロパティで、または <a href="ec24963c-8b51-4838-91e9-1fbfa2347451.htm">SQLServerStatement</a> オブジェクトの <a href="9f489835-6cda-4c8c-b139-079639a169cf.htm">setResponseBuffering</a> メソッドを使用して、responseBufferring プロパティを "full" に設定する必要があります。</p></div></td></tr><tr><td><p>selectMethod</p></td><td><p>String</p><p>["direct"|"cursor"]</p></td><td><p>direct</p></td><td><p>このプロパティが "cursor" に設定されている場合、TYPE_FORWARD_ONLY および CONCUR_READ_ONLY のカーソルに対して接続上で作成されるクエリごとに、データベース カーソルが作成されます。このプロパティは、通常、クライアントのメモリ内に収まらない非常に大きな結果セットをアプリケーションが生成する場合にのみ必要です。このプロパティが "cursor" に設定されると、結果セットの行が限定された数だけクライアントのメモリに保持されます。既定の動作では、すべての結果セットの行がクライアントのメモリに保持されます。この動作により、アプリケーションがすべての行を処理する場合は、パフォーマンスが最も高くなります。</p></td></tr><tr><td><p>sendStringParametersAsUnicode</p></td><td><p>boolean</p><p>["true"|"false"]</p></td><td><p>true</p></td><td><p><span sdata="langKeyword" value="sendStringParametersAsUnicode"><span class="keyword">sendStringParametersAsUnicode</span></span> プロパティが "true" に設定されている場合、文字列パラメーターは Unicode 形式でサーバーに送信されます。</p><p><span sdata="langKeyword" value="sendStringParametersAsUnicode"><span class="keyword">sendStringParametersAsUnicode</span></span> プロパティが "false" に設定されている場合、文字列パラメーターは、Unicode ではなく ASCII/MBCS などの Unicode 以外の形式でサーバーに送信されます。</p><p><span sdata="langKeyword" value="sendStringParametersAsUnicode"><span class="keyword">sendStringParametersAsUnicode</span></span> プロパティの既定値は "true" です。</p><p /><div style="margin: .5em 1.5em .5em 1.5em"><b></b><p><span sdata="langKeyword" value="CHAR"><span class="keyword">CHAR</span></span>、<span sdata="langKeyword" value="VARCHAR"><span class="keyword">VARCHAR</span></span>、または <span sdata="langKeyword" value="LONGVARCHAR"><span class="keyword">LONGVARCHAR</span></span> の各 JDBC 型のパラメーター値を送信するときにのみ、<span sdata="langKeyword" value="sendStringParametersAsUnicode"><span class="keyword">sendStringParametersAsUnicode</span></span> プロパティがチェックされます。JDBC 4.0 の新しい National Character メソッドである、<a href="a8481c06-fbba-432b-8c69-4f4619c20ad4.htm">SQLServerPreparedStatement</a> クラスおよび <a href="30710a63-c05d-47d9-9cf9-c087a1c76373.htm">SQLServerCallableStatement</a> クラスの <b>setNString</b>、<b>setNCharacterStream</b>、<b>setNClob</b> などのメソッドでは、このプロパティの設定に関係なく、常に、サーバーに対してパラメーター値が Unicode で送信されます。</p><p><span sdata="langKeyword" value="CHAR"><span class="keyword">CHAR</span></span>、<span sdata="langKeyword" value="VARCHAR"><span class="keyword">VARCHAR</span></span>、<span sdata="langKeyword" value="LONGVARCHAR"><span class="keyword">LONGVARCHAR</span></span> などの JDBC データ型の使用に伴うパフォーマンスを最適に保つためには、アプリケーションで、<span sdata="langKeyword" value="sendStringParametersAsUnicode"><span class="keyword">sendStringParametersAsUnicode</span></span> プロパティを "false" に設定し、National Character メソッド以外のメソッドである、<a href="a8481c06-fbba-432b-8c69-4f4619c20ad4.htm">SQLServerPreparedStatement</a> クラスおよび <a href="30710a63-c05d-47d9-9cf9-c087a1c76373.htm">SQLServerCallableStatement</a> クラスの  <b>setString</b>、<b>setCharacterStream</b>、および <b>setClob</b> を使用する必要があります。</p><p>アプリケーションで <span sdata="langKeyword" value="sendStringParametersAsUnicode"><span class="keyword">sendStringParametersAsUnicode</span></span> プロパティが "false" に設定されていて、National Character メソッド以外のメソッドを使用してサーバー側の Unicode データ型 (<span sdata="langKeyword" value="nchar"><span class="keyword">nchar</span></span>、<span sdata="langKeyword" value="nvarchar"><span class="keyword">nvarchar</span></span>、<span sdata="langKeyword" value="ntext"><span class="keyword">ntext</span></span> など) にアクセスする場合に、National Character メソッド以外のメソッドで渡される文字列パラメーターの文字がデータベース照合順序でサポートされていないときには、一部のデータが失われる可能性があります。</p><p>アプリケーションでは、<span sdata="langKeyword" value="NCHAR"><span class="keyword">NCHAR</span></span>、<span sdata="langKeyword" value="NVARCHAR"><span class="keyword">NVARCHAR</span></span>、<span sdata="langKeyword" value="LONGNVARCHAR"><span class="keyword">LONGNVARCHAR</span></span> の各 JDBC データ型に対して、<a href="a8481c06-fbba-432b-8c69-4f4619c20ad4.htm">SQLServerPreparedStatement</a> クラスおよび <a href="30710a63-c05d-47d9-9cf9-c087a1c76373.htm">SQLServerCallableStatement</a> クラスの National Character メソッドである <b>setNString</b>、<b>setNCharacterStream</b>、および <b>setNClob</b> を使用する必要がある点に注意してください。</p></div></td></tr><tr><td><p>sendTimeAsDatetime</p></td><td><p>boolean</p><p>["true"|"false"]</p></td><td><p>true</p></td><td><p>このプロパティは SQL Server JDBC Driver 3.0 で追加されました。</p><p>true の場合、java.sql.Time 値は SQL Server の <span sdata="langKeyword" value="datetime"><span class="keyword">datetime</span></span> 値としてサーバーに送信されます。</p><p>false の場合、java.sql.Time 値は SQL Server の <span sdata="langKeyword" value="time"><span class="keyword">time</span></span> 値としてサーバーに送信されます。</p><p>また、<span sdata="langKeyword" value="sendTimeAsDatetime"><span class="keyword">sendTimeAsDatetime</span></span> は <a href="705a0494-b5e2-43db-940a-1b8cec550cdb.htm">SQLServerDataSource.setSendTimeAsDatetime</a> を使用してプログラムから変更することもできます。</p><p>今後のリリースでは、このプロパティの既定値が変更される可能性があります。</p><p>java.sql.Time 値をサーバーに送信する前に、Microsoft JDBC Driver for SQL Server でその値を構成する方法の詳細については、「<span sdata="link"><a href="07eb00dd-621a-46f9-a5a5-8cab4d6058b5.htm">java.sql.Time の値をサーバーに送信する方法の構成</a></span>」を参照してください。</p></td></tr><tr><td><p>serverName、server</p></td><td><p>String</p></td><td><p>null</p></td><td><p>SQL Server を実行しているコンピューターです。</p><p>AlwaysOn 可用性グループの可用性グループの仮想ネットワーク名を指定することもできます。詳細については、「<span sdata="link"><a href="62de4be6-b027-427d-a7e5-352960e42877.htm">高可用性、障害回復のための JDBC Driver のサポート</a></span>」を参照してください。</p></td></tr><tr><td><p>trustServerCertificate</p></td><td><p>boolean</p><p>["true"|"false"]</p></td><td><p>false</p></td><td><p>Microsoft JDBC Driver for SQL Server が SQL Server の SSL 証明書を検証しないようにするには "true" に設定します。</p><p>"true" の場合、通信レイヤーが SSL で暗号化されていれば SQL Server の SSL 証明書が自動的に信頼されます。</p><p>"false" の場合は、Microsoft JDBC Driver for SQL Server がサーバーの SSL 証明書を検証します。サーバー証明書の検証が失敗した場合は、エラーが発生して接続が終了します。既定値は "false" です。SSL 接続に成功するためには、<span sdata="langKeyword" value="serverName"><span class="keyword">serverName</span></span> に渡された値が、サーバー証明書に含まれる Subject Alternate Name の Common Name (CN) または DNS 名と厳密に一致している必要があります。詳細については、「<span sdata="link"><a href="073f3b9e-8edd-4815-88ea-de0655d0325e.htm">SSL のサポートについて</a></span>」を参照してください。</p><div style="margin: .5em 1.5em .5em 1.5em"><b></b><p>このプロパティは、<span sdata="langKeyword" value="encrypt"><span class="keyword">encrypt</span></span> プロパティと組み合わせて使用されます。このプロパティがサーバーの SSL 証明書の検証に影響するのは、<span sdata="langKeyword" value="encrypt"><span class="keyword">encrypt</span></span> プロパティが "true" に設定されている場合だけです。</p></div></td></tr><tr><td><p>trustStore</p></td><td><p>String</p></td><td><p>null</p></td><td><p>証明書の trustStore ファイルへのパス (ファイル名を含む) です。trustStore ファイルには、クライアントが信頼する証明書の一覧が含まれています。</p><p>このプロパティが指定されていないか null に設定されている場合、ドライバーは、信頼マネージャー ファクトリの検索ルールに従って、使用する証明書ストアを決定します。</p><p>既定の SunX509 TrustManagerFactory では、次の順序で信頼済みマテリアルの検索が行われます。</p><ul><li><p>Java 仮想マシン (JVM) システム プロパティの "javax.net.ssl.trustStore" で指定されたファイル</p></li><li><p>"&lt;java-home&gt;/lib/security/jssecacerts" ファイル</p></li><li><p>"&lt;java-home&gt;/lib/security/cacerts" ファイル</p></li></ul><p>詳細については、Sun Microsystems の Web サイトで SunX509 TrustManager Interface についてのドキュメントを参照してください。</p><div style="margin: .5em 1.5em .5em 1.5em"><b></b><p>このプロパティが証明書の trustStore の検索に影響するのは、<span sdata="langKeyword" value="encrypt"><span class="keyword">encrypt</span></span> プロパティが "true" に設定されていて、<span sdata="langKeyword" value="trustServerCertificate"><span class="keyword">trustServerCertificate</span></span> プロパティが "false" に設定されている場合だけです。</p></div></td></tr><tr><td><p>trustStorePassword</p></td><td><p>String</p></td><td><p>null</p></td><td><p>trustStore データの整合性を確認するために使用するパスワードです。</p><p>trustStore プロパティは設定されているが trustStorePassword プロパティは設定されていない場合、trustStore の整合性は確認されません。</p><p>trustStore プロパティと trustStorePassword プロパティの両方が指定されていない場合、ドライバーでは、JVM システム プロパティの "javax.net.ssl.trustStore" と "javax.net.ssl.trustStorePassword" が使用されます。"javax.net.ssl.trustStorePassword" システム プロパティが指定されていない場合、trustStore の整合性は確認されません。</p><p>trustStore プロパティは設定されていないが trustStorePassword プロパティは設定されている場合、JDBC ドライバーでは、"javax.net.ssl.trustStore" で指定されたファイルがトラスト ストアとして使用され、指定された trustStorePassword を使用してトラスト ストアの整合性が確認されます。これは、クライアント アプリケーションでパスワードを JVM システム プロパティに格納しないようにする場合に必要となることがあります。</p><div style="margin: .5em 1.5em .5em 1.5em"><b></b><p>trustStorePassword プロパティが証明書の trustStore の検索に影響するのは、<span sdata="langKeyword" value="encrypt"><span class="keyword">encrypt</span></span> プロパティが "true" に設定されていて、<span sdata="langKeyword" value="trustServerCertificate"><span class="keyword">trustServerCertificate</span></span> プロパティが "false" に設定されている場合だけです。</p></div></td></tr><tr><td><p>user、userName</p></td><td><p>String</p><p>[128 文字以下]</p></td><td><p>null</p></td><td><p>データベース ユーザーです。</p></td></tr><tr><td><p>workstationID</p></td><td><p>String</p><p>[128 文字以下]</p></td><td><p>&lt;空の文字列&gt;</p></td><td><p>ワークステーション ID です。個別のワークステーションを識別するために、さまざまな SQL Server プロファイリング ツールおよびロギング ツールで使用されます。何も指定しなかった場合は、&lt;空の文字列&gt; が使用されます。</p></td></tr><tr><td><p>xopenStates</p></td><td><p>boolean</p><p>["true"|"false"]</p></td><td><p>false</p></td><td><p>"true" に設定すると、ドライバーが XOPEN 互換の状態コードを例外で返します。既定では、SQL 99 の状態コードを返します。</p></td></tr></table></div><div style="margin: .5em 1.5em .5em 1.5em"><b></b><p>Microsoft JDBC Driver for SQL Server は、ANSI_DEFAULTS および IMPLICIT_TRANSACTIONS 以外の接続プロパティのサーバー既定値を受け取ります。Microsoft JDBC Driver for SQL Server によって、ANSI_DEFAULTS は ON に、IMPLICIT_TRANSACTIONS は OFF に自動的に設定されます。</p></div></div><span id="seeAlsoSpan"><h1 class="heading">関連項目</h1></span><div id="seeAlsoSection" class="section" name="collapseableSection" style=""><div class="seeAlsoStyle"><span sdata="link"><a href="94bcfbe3-f00e-4774-bda8-bb7577518fec.htm">JDBC ドライバーによる SQL Server への接続</a></span></div></div></div><div id="footer" class="section"><span id="feedbackarea">このトピックに関する<a href="javascript:SubmitFeedback('DevDocs@Microsoft.com','','','','8.0.12060.10000','%0\dフィードバックありがとうございます。開発チームは、皆様からのフィードバックに基づいてドキュメントを改善しています。フィードバックを確認中、内容の確認または解決策に関するご意見をうかがうために電子メールをお送りする場合があります。お客様の電子メール アドレスをそれ以外の目的で使用することはありません。また、確認完了後はお客様の電子メール アドレス情報を削除させていただきます。%0\Aマイクロソフトのプライバシーに関する声明の詳細については、http://privacy.microsoft.com/ja-jp/default.aspx を参照してください。%0\A%0\d','カスタマー フィードバック');">フィードバック</a>を Microsoft にお送りください。</span><span id="copyrightarea"><p><a href="9bad553b-9e70-4696-8499-2e35f772a1e0.htm">© 2012 Microsoft.All rights reserved.</a></p></span></div></div></body></html>